/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



namespace org.gs1cn

enum BizStepType {
  o accepting 
  o arriving 
  o departing 
  o packing 
  o shipping 
}

/**
 * The status of a shipment
 */
enum DispositionType {
  o in_progress
  o in_transit
  o active 
}


abstract transaction captureEvent {
 
}


transaction  captureObjectEvent extends captureEvent{
  -->ObjectEvent epcis

}

transaction  captureAggregationEvent extends captureEvent{
  -->ObjectEvent epcis

}

transaction  captureTransformationEvent extends captureEvent{
  -->ObjectEvent epcis

}

transaction  captureTransactionEvent extends captureEvent{
  -->ObjectEvent epcis

}

concept  quantityElement{
--> epcClass epcClass
o Double quantity
o String  uom
}
abstract asset EPCISDocument identified by eventID{
  o String eventID
  o DateTime eventTime
  o DateTime  recordTime
  o Integer eventTimeZoneOffset
  o BizStepType bizStep
  o DispositionType disposition
  o String readPoint
  o String bizLocation
  
}

asset  ObjectEvent extends EPCISDocument{
--> Party  source optional
--> Party  destination optional
o quantityElement[] quantityList optional
o epc[] epcList optional
}
asset  	AggregationEvent extends EPCISDocument{
}
asset    TransformationEvent extends EPCISDocument{
}
asset    TransactionEvent extends EPCISDocument{
}
concept Address {
  o String city optional
  o String country
  o String street optional
  o String zip optional
}


 participant Party identified by GLN {
  o String GLN
  o String email
  o Address address

}

asset epc identified by epc{
  o String epc
  o String Name optional
}
concept epcList{
  --> epc[] epcList
}
asset epcTracking identified by id{
  o String id
  o Integer status
  --> epc epc
  --> Party Owner
}

asset epcClass identified by epcClass{
  o String epcClass
  o String Name optional
}
asset epcClassTracking identified by id{
  o String id
  o quantityElement quantityElement
  --> Party Owner
}





